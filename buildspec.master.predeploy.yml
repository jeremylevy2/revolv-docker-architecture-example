# Running on Ubuntu 18.04 (aws/codebuild/standard:1.0)
# https://github.com/aws/aws-codebuild-docker-images/blob/master/ubuntu/standard/1.0/Dockerfile
version: 0.2

env:
  # You can securely access your environment 
  # variables from your buildspec.
  #
  # parameter-store:
  #   MY_VAR: "/revolv_5eeb2b6cb3bf090012b8d149/ci/env/MY_VAR"
  
  variables:
    # Make sure that the timeout 
    # configured for your build project 
    # will be sufficient to handle your retries.
    REVOLV_WAITER_MAX_RETRIES: 6

phases:
  build:
    commands:
      # The pre-deploy command is set in your 
      # architecture configuration page.
      #
      # For multiple commands, we recommend you to use a shell script: 
      # - Add a shell script to your repository (eg: ./myscript.sh)
      # - Add `RUN chmod +x ./myscript.sh` in your Dockerfile
      # - Set pre-deploy command to `./myscript.sh`
      - echo Running pre-deploy command in production task...
      - | 
        PRE_DEPLOY_TASK_ARN=`aws ecs run-task \
          --cluster $REVOLV_ECS_CLUSTER \
          --task-definition $REVOLV_ECS_PRE_DEPLOY_TASK_DEF \
          --network-configuration="awsvpcConfiguration={subnets=[$REVOLV_ECS_PRE_DEPLOY_TASK_SUBNETS],securityGroups=[$REVOLV_ECS_PRE_DEPLOY_TASK_SECURITY_GROUPS],assignPublicIp=$REVOLV_ECS_PRE_DEPLOY_TASK_ASSIGN_PUBLIC_IP}" \
          --overrides '{ "containerOverrides": [ { "name": "'"$REVOLV_ECS_PRE_DEPLOY_TASK_CONTAINER_NAME"'", "environment": [ { "name": "REVOLV_COMMIT_ID", "value": "'"$CODEBUILD_RESOLVED_SOURCE_VERSION"'" } ] } ] }' \
          --launch-type=FARGATE \
          --query "tasks[0].taskArn" \
          --output text`
      - PRE_DEPLOY_TASK_ID=${PRE_DEPLOY_TASK_ARN##*/}
      - echo Waiting for pre-deploy command to terminate...
      - |
        RETRY_ENABLED=1
        RETRY_COUNT=0
        PRE_DEPLOY_CONTAINER_EXIT_CODE=0

        while [ $RETRY_COUNT -lt $REVOLV_WAITER_MAX_RETRIES ] && [ $RETRY_ENABLED -eq 1 ]; do
          RETRY_ENABLED=0
          aws ecs wait tasks-stopped --cluster $REVOLV_ECS_CLUSTER --tasks $PRE_DEPLOY_TASK_ARN 2>/dev/null
          WAITER_EXIT_CODE=$?
  
          if [ $WAITER_EXIT_CODE -eq 0 ]; then
            aws logs get-log-events \
              --log-group-name $REVOLV_ECS_PRE_DEPLOY_TASK_LOGS_GROUP_NAME \
              --log-stream-name $REVOLV_ECS_PRE_DEPLOY_TASK_LOGS_STREAM_PREFIX/$PRE_DEPLOY_TASK_ID \
              --query="events[].[message]" \
              --output text | sed 's/.*/[Production Container] &/'
            
            PRE_DEPLOY_CONTAINER_EXIT_CODE=`aws ecs describe-tasks \
              --tasks $PRE_DEPLOY_TASK_ARN \
              --cluster $REVOLV_ECS_CLUSTER \
              --query "tasks[0].containers[0].exitCode"`
            
            if [ $PRE_DEPLOY_CONTAINER_EXIT_CODE -eq 0 ]; then
              echo "[Production Container] Exited successfully"
            else
              echo "[Production Container] Exited with non-zero exit status"
            fi
  
          elif [ $WAITER_EXIT_CODE -eq 255 ]; then
            ((RETRY_COUNT++))
            if [ $RETRY_COUNT -eq $REVOLV_WAITER_MAX_RETRIES ]; then
              echo "[Production Container] Timed out"
              PRE_DEPLOY_CONTAINER_EXIT_CODE=255
            else
              RETRY_ENABLED=1
            fi
          
          else
            echo "[Production Container] Waiter exited with non-zero exit status"
            PRE_DEPLOY_CONTAINER_EXIT_CODE=$WAITER_EXIT_CODE
          fi
        done
      - exit $PRE_DEPLOY_CONTAINER_EXIT_CODE
  post_build:
    commands:
      - echo No post pre-deploy commands
